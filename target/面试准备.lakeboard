{"format":"lakeboard","type":"Board","version":"1.0","diagramData":{"head":{"version":"2.0.0","theme":{"name":"default"},"rough":{"name":"default"}},"body":[{"id":"cbed35ae-b714-4cac-9a62-3dc607391d4e","x":553.3662298828126,"y":397.6250018554688,"html":"面试准备","type":"mindmap","defaultContentStyle":{"color":"rgb(38, 38, 38)"},"border":{"fill":"#F5F5F5","shape":"capsule","stroke":"transparent","stroke-width":2},"children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2,"fill":"#EFF0F0"},"layout":{"quadrant":1},"treeEdge":{"stroke-width":2,"stroke":"#69B1E4"},"defaultContentStyle":{"color":"#262626"},"id":"4a6de0b2-1c08-4f70-963a-79ad2429db4d","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"layout":{"quadrant":1},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4df870f2-29d6-4038-8451-408a6ad029f5","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fde9bc08-60b3-4e23-a124-73948a2d5088","children":[],"html":"基于 Antd 进行二次封装的通用业务组件库，通过传入<span style=\"font-weight:bold;\">配置数据</span>可以生成后台常规增删改查页面，在数据层可以<span style=\"font-weight:bold;\">自动触发列表数据更新</span>","zIndex":59},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"3ada3879-9bd9-4657-8004-5eafd5fa4e44","children":[],"html":"主要针对 form，table、modal组件进行封装","zIndex":58}],"html":"是什么","zIndex":60},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a2dbb0bc-6a7b-4598-a57f-f4cf04655ba6","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"layout":{"quadrant":1},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"55d685da-419b-4367-82c2-a2a0790e15a7","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d7a95120-8e90-4a26-86fa-cce34b3b61c0","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ac10ca61-0726-448c-afc0-9ebb9f05f9ef","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e7fb6667-21ec-4fe3-a7e3-d12bc581c346","children":[],"html":"Form搜索项+Search/Reset Button+分页Table","zIndex":75}],"html":"列表展示页","zIndex":76},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"560f0e33-10d0-4bf1-b7f5-b43571df1be8","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"15f6d690-5e1f-4d16-aa8e-e1dda08dcfd6","children":[],"html":"Modal + Form + Submit Button","zIndex":77}],"html":"新增/修改","zIndex":78},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"bd9f32f0-b722-4d60-83b2-e65a5766140f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"bc779837-feb2-4081-97d8-08e7412b5b8e","children":[],"html":"Modal + Table","zIndex":73}],"html":"详情","zIndex":74}],"html":"1. 公司后台系统多(20多个)，并且功能设计类似，以增删改查页面为主","zIndex":79},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f1acb640-b8e2-4025-9ef5-e4ea99178ece","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"26397ea4-503b-41cf-a305-7ed8844fb1bb","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"504844ad-9498-416d-804e-d0d3e0a408e0","children":[],"html":"Form&gt;FormItem&gt;Input","zIndex":68}],"html":"1. antd组件嵌套，重复代码多","zIndex":69},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"da2bba82-6173-4e1a-871b-73f47f57045d","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1c5e7db9-92ba-416a-b1ee-fae4257d289d","children":[],"html":"Form经常需要通过labelCol、wrapperCol调整布局","zIndex":70}],"html":"2. 组件组合后样式无法满足业务需要，并且很难实现页面布局统一","zIndex":71},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"91ea24fb-5a8f-4a32-9093-8a1dc06f347f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"5ea0dd83-8a32-4753-a2b6-93fae073207a","children":[],"html":"Form搜索项提交或者reset后，无法自动触发Table数据重新请求","zIndex":66},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"01e5053f-0749-4548-ba82-99c7c390d75f","children":[],"html":"Table分页需要手动维护状态","zIndex":65}],"html":"3. 通用业务逻辑无法公用","zIndex":67}],"html":"2. 直接使用 Antd 组件库比较繁琐","zIndex":72}],"html":"问题","zIndex":80},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0f96d6df-613e-4526-8fa1-76afe9c989d6","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"09cf2e72-9c6f-469a-a6b8-269ac7afd591","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0de6bddd-c6ac-4a0e-b686-15fef731c51f","children":[],"html":"采用配置化数据生成Form、table视图，解决重复代码的问题；配置数据和业务逻辑完全分离，便于维护","zIndex":85},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"cf14fdad-57d4-4226-97fa-a16b03e80137","children":[],"html":"对Form统一做自适应布局，解决布局单独配置及不一致问题","zIndex":86},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"83eedb6d-21e6-4542-85a3-6eb0efd41b84","children":[],"html":"将通用逻辑收敛到组件内部处理：比如列表查询页form筛选项修改，或者table切换分页时，需要重新调用接口请求数据更新列表","zIndex":84}],"html":"对于常规页面能够通过配置化的方式，快速搭建，提升开发效率","layout":{"quadrant":1},"zIndex":87},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6f09abdf-208b-44ee-bbc8-db59e368b9f9","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e31b7e86-f3a4-4242-920b-8713aab64aac","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7576f722-cc08-404b-8832-19ea9988fd72","children":[],"html":"通过全局配置来做type和组件的映射","zIndex":90}],"html":"1. FormItem内的组件如何配置","layout":{"quadrant":1},"zIndex":91},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1ff5174f-447e-4c75-98e7-6d1a9a470511","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"38a5b225-1f50-453a-a1a9-54604b7a8ab2","children":[],"html":"通过 nextFields 参数单独传入，通过key来和配置的fields做合并","zIndex":88}],"html":"2. tableCell内部的组件存在特殊逻辑，如何配置","layout":{"quadrant":1},"zIndex":89}],"html":"难点：如何实现配置和业务逻辑完全分离","zIndex":92},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"458c5835-1021-423a-8885-9bd6aa0284a0","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"9b841ace-5328-4909-8f88-0417ec2ce60d","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8f3388d2-bcff-4e7e-9cb2-76beb708f56b","children":[],"html":"引用封装后的组件，传入form和table配置数据，和获取数据的接口调用函数即可。","zIndex":81}],"html":"完成一个常规的后台列表查询页，上方是Form查询筛选项，submit和reset按钮，下方是分页Table","zIndex":82}],"html":"使用","zIndex":83}],"html":"解决","layout":{"quadrant":1},"zIndex":93},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a97aded3-b6e8-4cd7-8f88-060d700091ec","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ed908c61-3527-484d-b68e-1e618bd64bc8","children":[],"html":"原来1天需要完成的工作量，缩短为0.5天完成","zIndex":62},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a6873987-76ab-4f19-8591-03f5fccffe71","children":[],"html":"页面在整体布局实现统一，提升用户体验","zIndex":63},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"10cee56f-d2cb-42dd-986b-e831b5418a4c","children":[],"html":"代码更加清晰，风格统一，便于维护","zIndex":61}],"html":"成果","zIndex":64}],"html":"背景","zIndex":94},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"9d4e417d-c0d0-4002-948d-ec0d518d4604","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1c3c7743-f153-4d60-9cf7-83790ff929fa","children":[],"html":"采用 monorepo 独立模式，方便组件的统一维护 &amp; 独立发布","zIndex":97},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"15bf3e2b-3f1c-4bb2-a040-0a6cc475638e","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b53e8c63-9461-4a33-b76b-a1f9c76e281a","children":[],"html":"通过dumi提供demo的能力","zIndex":95}],"html":"组件库主要基于 yarn workspaces、lerna、dumi、umi-test 搭建","height":29.660611630752555,"width":439.02825108478874,"zIndex":96}],"html":"技术栈","zIndex":98},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4c4366b3-dfe8-4f4f-b189-4327e8a88cce","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"36d51f9e-0a80-418f-815f-395d9e2ce4c0","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7a766074-52f3-41ee-8b0d-f7013f64424c","children":[],"html":"在 Antd 组件的 ConfigProvider 外层，增加一个自定义的 config-provider，用于接受全局配置数据","zIndex":102}],"html":"config-provider","zIndex":103},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6550d4b7-43c3-4785-9a8f-3e9f30286c71","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b0c33aba-fe82-41fd-9a35-90a03ab99fec","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4674d89a-12da-485b-aeef-d22a1eded962","children":[],"html":"接受配置参数生成Form","zIndex":117}],"html":"功能","zIndex":118},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e2406096-e26c-4180-b6e9-0a095860fdc2","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6c7b7a42-edf8-47d0-9fbc-cdeca0abeac7","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e2f9eefd-dc05-4a75-8efc-4175eab1ff68","children":[],"html":"接受Form配置数据","zIndex":108},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"3dba486b-a5da-4e1b-b9d8-e9f4e056192c","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"571d9a43-7dc2-40f8-995a-1094e5b89b96","children":[],"html":"AntdForm组件参数；FormItem组件参数；Type：自定义业务组件类型","zIndex":106}],"html":"可以配置什么","zIndex":107}],"html":"FormProvider","zIndex":109},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"5366c814-62ed-48a0-a6bd-f1c95d700d50","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"3b697fda-6ba0-45c2-8fd0-5b30e0898fe2","children":[],"html":"处理配置参数，统一布局，返回AntdForm并将配置参数传递给FormItem","zIndex":112}],"html":"Form","zIndex":113},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"47bb36fc-8866-48d3-a486-44c078339bbd","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b4048009-a127-4ec9-8b3b-95a3f1d14a3b","children":[],"html":"外层包裹FormItemContainer统一处理布局，处理配置参数传递给AntdFormItem","zIndex":114}],"html":"FormItem","zIndex":115},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"3c24f119-4a54-430a-8320-413b6142893a","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6a5f1885-5ebf-4db8-8a6a-855583c7f108","children":[],"html":"一个类，可以生成FormItem内包裹的组件实例","zIndex":110}],"html":"FormFields","zIndex":111},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6729f220-bfdf-42a0-8dbf-891c57e16fcf","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a289520d-273f-4d9f-9047-2ca4b810b2e2","children":[],"html":"根据配置的type类型生成自定义业务组件实例，并挂载在Form实例上","zIndex":104}],"html":"Field","zIndex":105}],"html":"实现","zIndex":116}],"html":"form","zIndex":119},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"layout":{"quadrant":1},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"238ffbc1-4bf5-48a8-b50a-ac39167db1e5","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"83190d36-447e-4e05-90cf-b8cfaf05a0ec","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"5bbfc260-b583-48b8-9015-fe79aada529f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"22a39018-3a58-4f5d-8591-c05655aa6de9","children":[],"html":"可以展示文字、图片、upload...","zIndex":138}],"html":"1. 扩展生成table的columns配置","zIndex":139},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"41b700a7-2cbc-4596-ad31-3f0e14db7c1b","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f4514492-bdf8-4217-aaea-e811b74debbe","children":[],"html":"可以将时间戳转为pst时间 type:'time-pst'","zIndex":135}],"html":"2. 数据格式化","zIndex":136},{"start":0,"end":1,"abstract":true,"layout":{"quadrant":1},"border":{"shape":"rect","stroke":"#BFBFBF","fill":"transparent","stroke-width":2},"treeEdge":{"stroke":"#BFBFBF","stroke-width":2},"html":"获取table配置，生成table时，结合全局配置判断type，如果是函数就执行返回结构，如果是react元素就通过createElement生成组件","defaultContentStyle":{"color":"#262626"},"id":"fc57af5c-9e8a-470e-a8d9-213e26833b76","children":[],"zIndex":137}],"html":"功能","zIndex":140}],"html":"table","zIndex":141},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"5ca6fbbb-274a-4d9b-9a25-733dc7cf9169","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1b825227-821d-40cb-b031-dbda13b046f1","children":[],"html":"在antd modal基础上增加form、fields(form配置数据)和data(用于form数据回填)参数，生成modal+form视图，适用于新增/修改弹窗的业务场景","zIndex":142}],"html":"modal","zIndex":143},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"layout":{"quadrant":1},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4b4795b9-a682-4dbf-831b-bd3b46971cd1","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"96978f4b-5428-4a78-82f1-b3ba3f98c041","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b5a9ca7c-d1a2-43e2-8bf8-786ad1ab22ec","children":[],"html":"1. 给组件传入ref、form和table配置数据(formProps、tableProps)、refetch函数可以生成列表查询页","zIndex":132},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4d34f77c-e738-4c0d-8533-ae353d95a79f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0669119a-6c81-4e15-9d87-56868ee56573","children":[],"html":"通过转发 tableRef 实现","zIndex":130}],"html":"2. 修改搜索条件点提交按钮，切换表格分页(触发表格onChange事件)，点重置按钮时 ，自动refetch","zIndex":131}],"html":"功能","zIndex":133},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ff83604c-b952-4c65-a503-37cfccacc138","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"27cbc86d-b6f0-4d46-97c3-453992e21c35","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"5a30cd07-f7af-474f-a4b0-e32dbc225787","children":[],"html":"1. 定义表格操作类型tableQueryActions：onQuery、onReset、onLoad，通过actionRef.current.onQuery()可以手动触发refetch","layout":{"quadrant":1},"zIndex":126},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"9e74568d-74e3-4614-9c02-a0bc6bddf7a8","children":[],"html":"2. 这三个操作类型，实际是传入的fetchData函数代理，作用是判断当前操作类型来维护form和分页状态(current、pageSize)，把当前pagination相关数据传给fetchData作为参数","width":449.6370566877695,"zIndex":127},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b13dfc14-1bf1-4eea-80ef-d62b5ba1e1ff","children":[],"html":"3. 处理tableProps，用于传给AntdTable","zIndex":125},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"dfbf3b41-8c5b-464a-afbe-43694b36ff7b","children":[],"html":"4. 返回 [tableQueryActions, tableProps]","zIndex":124}],"html":"useTableQuery","zIndex":128},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"82f39621-b943-4dcd-a40b-c019ec48da7a","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"45a7fc11-b794-44ac-b0a6-9c92a3d7bb8c","children":[],"html":"Form","zIndex":121},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fc5bd7ac-81dd-4b9a-bc6e-e22ad2875a60","children":[],"html":"Toolbar","zIndex":122},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f01b49a2-3adb-4308-ae02-dbbb6965bba6","children":[],"html":"Table","zIndex":120}],"html":"构建视图","zIndex":123}],"html":"实现","zIndex":129}],"html":"list-content","zIndex":134},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"acba199f-b7eb-4e9b-9e5b-2acc659b3a79","children":[],"html":"业务组件","zIndex":101}],"html":"组件开发","zIndex":144},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8925869e-b400-4d72-aa00-e4c0959c0da8","children":[],"html":"测试与调试","zIndex":100},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4e5cb3d1-e285-4c3e-8034-fc4f2db4d599","children":[],"html":"发布和版本管理","zIndex":99},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a770e4e6-07dc-48b5-afd0-9c7dc2c406fb","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1d9f7260-916e-47a3-9580-89c4f218491a","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"46061629-5fbb-40ef-bf28-473887022a30","children":[],"html":"是一种代码管理方式(单仓库多模块应用)，指单个仓库管理多个项目，便于代码共享和协作","zIndex":5},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ddeec542-8c17-41dd-a82b-dbd5403cba59","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ac7def67-cad2-4d4d-aadd-94d584f16edd","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"3ebeccf2-2667-4be3-b912-66884c68b7dc","children":[],"html":"放在一个仓库中，可以看到代码全貌和变化，便于团队协作","zIndex":8}],"html":"代码可见性","zIndex":9},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"2f32f6e4-4fc7-4def-b54c-dfa942687035","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"32c47e1a-8714-4d33-9011-2a34503a85bc","children":[],"html":"多项目代码都在一个仓库中，相同版本依赖提升到顶层只安装一次，节省磁盘内存","zIndex":12}],"html":"依赖管理","zIndex":13},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1b36fbed-6b1e-4edb-854f-0c67cf1a6a17","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"051eb0dc-246f-4565-b10d-62f4e59d1ca3","children":[],"html":"代码复用高，方便进行代码重构","zIndex":15},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7a51eae0-e641-460b-b7d9-a75a9f330a3c","children":[],"html":"依赖调试方便，依赖包迭代场景下，借助工具自动 npm link，直接使用最新版本依赖，简化了操作流程。","zIndex":14}],"html":"开发迭代","zIndex":16},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d78d2886-a54b-422b-9cb3-352a891ccc9f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7f4161c5-b16c-4201-91ab-6cf26cc50210","children":[],"html":"多项目在一个仓库，工程配置一致，代码质量标准及风格也很容易一致","zIndex":10}],"html":"工程配置","zIndex":11},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"9ca8c4fe-5092-4da3-a18d-9fba32b1edaf","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"59c4626c-2a4d-486e-a094-b403954e64ad","children":[],"html":"构建性 Monorepo 工具可以配置依赖项目的构建优先级，可以实现一次命令完成所有的部署","zIndex":6}],"html":"构建部署","zIndex":7}],"html":"优点","zIndex":17},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ca01668a-c1d2-4d80-86bd-c388877d3df8","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8c85d5f0-7cdc-4895-8e0b-07ca2f64f0ab","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"521f2250-2517-4f7b-b226-d4aa6571c5ff","children":[],"html":"存在非owner改动代码的风险","layout":{"quadrant":1},"zIndex":21},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1d025098-6133-47b1-ad47-2b95d994e759","children":[],"html":"没有项目粒度的权限管控，一个项目出问题，可能影响所有项目","layout":{"quadrant":1},"zIndex":20}],"html":"权限","zIndex":22},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e9c43541-bd51-4b7d-bf53-246e7ed7b1e1","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f1d83b7e-176f-461a-8f0f-ab036530b0a3","children":[],"html":"多项目在一个仓库中，代码体积多大几个 G，git clone时间较长","zIndex":18}],"html":"开发","zIndex":19}],"html":"缺点","zIndex":23},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"aadda738-7496-4f74-8bf5-ca9be5073b03","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d98a4e8c-0077-47ea-a400-339f862264a5","children":[],"html":"中大型项目，多模块项目，更适合用 MonoRepo 方式管理代码，在开发、协作效率、代码一致性方面都能受益。","zIndex":40}],"html":"使用场景","zIndex":41},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e2880b1f-0e05-460d-abf8-66e817079318","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a10d4eb4-2111-4265-bfea-a600cf61944d","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"23f5a17a-d2cb-4eee-8edd-476c602ec381","children":[],"html":"问题：npm/yarn 安装依赖时，存在依赖提升，某个项目使用的依赖，并没有在其 package.json 中声明，也可以直接使用，这种现象称之为 “幽灵依赖”；随着项目迭代，这个依赖不再被其他项目使用，不再被安装，使用幽灵依赖的项目，会因为无法找到依赖而报错。","zIndex":50},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7929b4c9-fb45-4504-936f-2ea01800969d","children":[],"html":"方案：基于 npm/yarn 的 Monorepo 方案，依然存在 “幽灵依赖” 问题，我们可以通过 pnpm 彻底解决这个问题","zIndex":49}],"html":"幽灵依赖","zIndex":51},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"68c11c94-1005-437b-8392-9a002f3960f9","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b5444fa2-db98-44e5-847c-656f2eaad449","children":[],"html":"问题：MonoRepo 中每个项目都有自己的 package.json 依赖列表，随着 MonoRepo 中依赖总数的增长，每次 install 时，耗时会较长。","zIndex":53},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"53969043-3201-432d-99fa-fbd1cb744e86","children":[],"html":"方案：相同版本依赖提升到 Monorepo 根目录下，减少冗余依赖安装；使用 pnpm 按需安装及依赖缓存。","zIndex":52}],"html":"依赖安装耗时长","zIndex":54},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fa0fccc0-0243-4647-b789-9776a27a3f3c","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fb2755c1-eecd-4b12-a064-19dbfaddceb7","children":[],"html":"问题：多个项目构建任务存在依赖时，往往是串行构建 或 全量构建，导致构建时间较长","zIndex":47},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"bf76a82d-4bf4-4751-bdbf-dbe9d977cdb1","children":[],"html":"方案：增量构建，而非全量构建；也可以将串行构建，优化成并行构建","zIndex":46}],"html":"构建打包耗时长","zIndex":48}],"html":"踩坑","zIndex":55},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"3925a4e9-f9ba-4066-8a59-2bd65c881b3c","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"911ebcc9-0705-437a-b7ac-077c39536559","children":[],"html":"Turborepo","zIndex":43},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a6c8da85-c5e4-45db-9c6d-6fe07e5af393","children":[],"html":"Rust","zIndex":44},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ec2f4f72-332d-4306-864d-894c6d8209b6","children":[],"html":"Nx","zIndex":42}],"html":"构建型 Monorepo 方案","zIndex":45},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d515113d-b54c-437b-9aa4-3b45731bd612","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6a88df07-1735-4631-b877-93aa8aca8d8e","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"10ddf81b-fa6c-4e4f-8845-6d877afa4840","children":[],"html":"Lerna 是 Babel 为实现 Monorepo 开发的工具；最擅长管理依赖关系和发布","zIndex":35}],"html":"Lerna","zIndex":36},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b9f7f9f2-ef8f-4ce5-ae21-3c6f1cc70aff","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8ed4492a-8665-4789-ac22-e7e93bbf42ba","children":[],"html":"yarn workspace负责依赖管理；lerna负责依赖发布","zIndex":37}],"html":"yarn/npm + workspace","zIndex":38},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0ca06475-a3e1-4a98-aff4-e2c1be505230","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"878d6356-585a-48c0-8666-fd14dfd2fa70","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"03470cf3-9a32-4d62-81cf-5dec09886951","children":[],"html":"pnpm 是新一代 Node 包管理器，它由 npm/yarn 衍生而来，解决了 npm/yarn 内部潜在的风险，并且极大提升依赖安装速度","zIndex":31},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0468919b-9b5f-43a6-be28-ae2422cdbde4","children":[],"html":"pnpm 内部使用基于内容寻址的文件系统，来管理磁盘上依赖，减少依赖安装；node_modules/.pnmp为虚拟存储目录，该目录通过&lt;package-name&gt;@&lt;version&gt;来实现相同模块不同版本之间隔离和复用，由于它只会根据项目中的依赖生成，并不存在提升。","zIndex":32},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1c82bafe-3161-4cb1-bb8d-bae68470e5c7","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a5c4e0c6-498e-4202-b58a-92db1a5835db","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8932ec9c-cc6d-4977-9501-6f54a0495e81","children":[],"html":"缓存中有的依赖，直接硬链接到项目的 node_module 中；减少了 copy 的大量 IO 操作","zIndex":26}],"html":"装包速度极快","zIndex":27},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"19056c35-59e2-481b-8472-01aea039ed9c","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f1e48b0e-fbd2-4f68-b447-b89952134f31","children":[],"html":"软/硬链接方式，同一版本的依赖共用一个磁盘空间；不同版本依赖，只额外存储 diff 内容","zIndex":28}],"html":"磁盘利用率极高","zIndex":29},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"2af5e33c-8c1a-44d5-920a-068293c0546f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"210190ae-82b0-46ea-8fb1-3e8654c5b0f0","children":[],"html":"node_modules 目录结构 与 package.json 依赖列表一致","zIndex":24}],"html":"解决了幽灵依赖","zIndex":25}],"html":"对比npm和yarn的优势","zIndex":30}],"html":"pnpm","zIndex":33}],"html":"Lerna + pnpm + workspace","zIndex":34}],"html":"轻量化 Monorepo 方案","zIndex":39},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"282cb026-e54d-4169-8c90-db9fbdd33832","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"80ad78f8-7283-4d80-a38e-446607ecbc59","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6a42ead3-458e-4064-9e51-116e972b7fc0","children":[],"image":{"src":"https://cdn.nlark.com/yuque/0/2024/png/2798618/1715067458331-c0e2c642-5df9-42bd-83a8-176fb9433535.png","naturalWidth":1538,"naturalHeight":730,"uploadInfo":{"hash":"620918a7c87a040fe31b1e910889157dae1d07ec012c33cb09282eced11bcef0","fileName":"yuque_diagram (10).png","fileType":"image/png","fileSize":154612,"localTempSrc":"blob:https://www.yuque.com/f8767ff4-c23a-42b2-a4b6-82edd0b71a15","state":-2},"width":480,"height":227.82834850455137},"html":"<div style=\"text-align:center;\"><span style></span></div>","zIndex":2}],"html":"工具对比","zIndex":3},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"65212fed-c2f2-48b9-9532-84fc7a5bf10a","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8690ee7c-ba1b-436e-b069-0dde81502843","children":[],"html":"建议采用渐进式架构方案，即对于轻量级 Monorepo 项目，我们初期可以选择 Lerna + pnpm workspace + lerna-changelog，解决了依赖管理、发版管理等问题，为开发者带来便利；随着后续项目迭代，代码变多或多个项目间依赖关系复杂，可以很平滑的接入 Nx 来提升构建打包效率。","zIndex":0}],"html":"选型建议","zIndex":1}],"html":"总结","layout":{"quadrant":1},"zIndex":4}],"html":"monorepo","zIndex":56}],"html":"组件库相关","zIndex":57}],"html":"业务组件库","zIndex":145}],"layout":{"type":"standard","direction":[1,0]},"zIndex":146}]},"mode":"edit","viewportSetting":{"zoom":1,"tlCanvasPoint":[343.8662109375,28.50244140625,1],"width":1601,"height":949},"viewportOption":"adapt","text":"面试准备业务组件库是什么基于 Antd 进行二次封装的通用业务组件库，通过传入配置数据可以生成后台常规增删改查页面，在数据层可以自动触发列表数据更新主要针对 form，table、modal组件进行封装背景问题1. 公司后台系统多(20多个)，并且功能设计类似，以增删改查页面为主列表展示页Form搜索项+Search/Reset Button+分页Table新增/修改Modal + Form + Submit Button详情Modal + Table2. 直接使用 Antd 组件库比较繁琐1. antd组件嵌套，重复代码多Form>FormItem>Input2. 组件组合后样式无法满足业务需要，并且很难实现页面布局统一Form经常需要通过labelCol、wrapperCol调整布局3. 通用业务逻辑无法公用Form搜索项提交或者reset后，无法自动触发Table数据重新请求Table分页需要手动维护状态解决对于常规页面能够通过配置化的方式，快速搭建，提升开发效率采用配置化数据生成Form、table视图，解决重复代码的问题；配置数据和业务逻辑完全分离，便于维护对Form统一做自适应布局，解决布局单独配置及不一致问题将通用逻辑收敛到组件内部处理：比如列表查询页form筛选项修改，或者table切换分页时，需要重新调用接口请求数据更新列表难点：如何实现配置和业务逻辑完全分离1. FormItem内的组件如何配置通过全局配置来做type和组件的映射2. tableCell内部的组件存在特殊逻辑，如何配置通过 nextFields 参数单独传入，通过key来和配置的fields做合并使用完成一个常规的后台列表查询页，上方是Form查询筛选项，submit和reset按钮，下方是分页Table引用封装后的组件，传入form和table配置数据，和获取数据的接口调用函数即可。成果原来1天需要完成的工作量，缩短为0.5天完成页面在整体布局实现统一，提升用户体验代码更加清晰，风格统一，便于维护技术栈采用 monorepo 独立模式，方便组件的统一维护 & 独立发布组件库主要基于 yarn workspaces、lerna、dumi、umi-test 搭建通过dumi提供demo的能力组件开发config-provider在 Antd 组件的 ConfigProvider 外层，增加一个自定义的 config-provider，用于接受全局配置数据form功能接受配置参数生成Form实现FormProvider接受Form配置数据可以配置什么AntdForm组件参数；FormItem组件参数；Type：自定义业务组件类型Form处理配置参数，统一布局，返回AntdForm并将配置参数传递给FormItemFormItem外层包裹FormItemContainer统一处理布局，处理配置参数传递给AntdFormItemFormFields一个类，可以生成FormItem内包裹的组件实例Field根据配置的type类型生成自定义业务组件实例，并挂载在Form实例上table功能1. 扩展生成table的columns配置可以展示文字、图片、upload...2. 数据格式化可以将时间戳转为pst时间 type:'time-pst'获取table配置，生成table时，结合全局配置判断type，如果是函数就执行返回结构，如果是react元素就通过createElement生成组件modal在antd modal基础上增加form、fields(form配置数据)和data(用于form数据回填)参数，生成modal+form视图，适用于新增/修改弹窗的业务场景list-content功能1. 给组件传入ref、form和table配置数据(formProps、tableProps)、refetch函数可以生成列表查询页2. 修改搜索条件点提交按钮，切换表格分页(触发表格onChange事件)，点重置按钮时 ，自动refetch通过转发 tableRef 实现实现useTableQuery1. 定义表格操作类型tableQueryActions：onQuery、onReset、onLoad，通过actionRef.current.onQuery()可以手动触发refetch2. 这三个操作类型，实际是传入的fetchData函数代理，作用是判断当前操作类型来维护form和分页状态(current、pageSize)，把当前pagination相关数据传给fetchData作为参数3. 处理tableProps，用于传给AntdTable4. 返回 [tableQueryActions, tableProps]构建视图FormToolbarTable业务组件测试与调试发布和版本管理组件库相关monorepo是一种代码管理方式(单仓库多模块应用)，指单个仓库管理多个项目，便于代码共享和协作优点代码可见性放在一个仓库中，可以看到代码全貌和变化，便于团队协作依赖管理多项目代码都在一个仓库中，相同版本依赖提升到顶层只安装一次，节省磁盘内存开发迭代代码复用高，方便进行代码重构依赖调试方便，依赖包迭代场景下，借助工具自动 npm link，直接使用最新版本依赖，简化了操作流程。工程配置多项目在一个仓库，工程配置一致，代码质量标准及风格也很容易一致构建部署构建性 Monorepo 工具可以配置依赖项目的构建优先级，可以实现一次命令完成所有的部署缺点权限存在非owner改动代码的风险没有项目粒度的权限管控，一个项目出问题，可能影响所有项目开发多项目在一个仓库中，代码体积多大几个 G，git clone时间较长使用场景中大型项目，多模块项目，更适合用 MonoRepo 方式管理代码，在开发、协作效率、代码一致性方面都能受益。踩坑幽灵依赖问题：npm/yarn 安装依赖时，存在依赖提升，某个项目使用的依赖，并没有在其 package.json 中声明，也可以直接使用，这种现象称之为 “幽灵依赖”；随着项目迭代，这个依赖不再被其他项目使用，不再被安装，使用幽灵依赖的项目，会因为无法找到依赖而报错。方案：基于 npm/yarn 的 Monorepo 方案，依然存在 “幽灵依赖” 问题，我们可以通过 pnpm 彻底解决这个问题依赖安装耗时长问题：MonoRepo 中每个项目都有自己的 package.json 依赖列表，随着 MonoRepo 中依赖总数的增长，每次 install 时，耗时会较长。方案：相同版本依赖提升到 Monorepo 根目录下，减少冗余依赖安装；使用 pnpm 按需安装及依赖缓存。构建打包耗时长问题：多个项目构建任务存在依赖时，往往是串行构建 或 全量构建，导致构建时间较长方案：增量构建，而非全量构建；也可以将串行构建，优化成并行构建构建型 Monorepo 方案TurborepoRustNx轻量化 Monorepo 方案LernaLerna 是 Babel 为实现 Monorepo 开发的工具；最擅长管理依赖关系和发布yarn/npm + workspaceyarn workspace负责依赖管理；lerna负责依赖发布Lerna + pnpm + workspacepnpmpnpm 是新一代 Node 包管理器，它由 npm/yarn 衍生而来，解决了 npm/yarn 内部潜在的风险，并且极大提升依赖安装速度pnpm 内部使用基于内容寻址的文件系统，来管理磁盘上依赖，减少依赖安装；node_modules/.pnmp为虚拟存储目录，该目录通过<package-name>@<version>来实现相同模块不同版本之间隔离和复用，由于它只会根据项目中的依赖生成，并不存在提升。对比npm和yarn的优势装包速度极快缓存中有的依赖，直接硬链接到项目的 node_module 中；减少了 copy 的大量 IO 操作磁盘利用率极高软/硬链接方式，同一版本的依赖共用一个磁盘空间；不同版本依赖，只额外存储 diff 内容解决了幽灵依赖node_modules 目录结构 与 package.json 依赖列表一致总结工具对比选型建议建议采用渐进式架构方案，即对于轻量级 Monorepo 项目，我们初期可以选择 Lerna + pnpm workspace + lerna-changelog，解决了依赖管理、发版管理等问题，为开发者带来便利；随着后续项目迭代，代码变多或多个项目间依赖关系复杂，可以很平滑的接入 Nx 来提升构建打包效率。","graphicsBBox":{"x":553.3662109375,"y":-1428.99755859375,"width":2022,"height":4823}}