{"format":"lakeboard","type":"Board","version":"1.0","diagramData":{"head":{"version":"2.0.0","theme":{"name":"default"},"rough":{"name":"default"}},"body":[{"id":"7408b90b-9e10-4b26-aee1-69de4bb9ca81","x":553,"y":3067.25,"html":"<a href=\"https://es6.ruanyifeng.com/#docs/intro\" target=\"_blank\" style>ES6+</a>","type":"mindmap","defaultContentStyle":{"color":"rgb(38, 38, 38)"},"border":{"fill":"#F5F5F5","shape":"rect","stroke":"transparent","stroke-width":2},"children":[{"layout":{"quadrant":1,"type":"standard","direction":[1,0],"quadrantConstraint":[1]},"border":{"shape":"rect","stroke-width":2,"fill":"#FAEDF6","stroke":"transparent"},"treeEdge":{"stroke-width":2,"stroke":"#E482D4"},"id":"1544b8dc-2c5f-4c6f-8c26-55f8e4659f20","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"layout":{"quadrant":1},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"9cf559f7-7bc1-445e-81fe-8680b768d20c","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"49331175-884e-439b-9d21-9e33e98242c7","children":[],"html":"指由花括号{}包含所形成的代码块，这个代码块内部定义的变量在代码块外部不可见。let关键字为JS新增了块级作用域的支持。","zIndex":68}],"html":"概念","zIndex":69},{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"05a29fab-b783-443e-a60c-a19f6563e0a6","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f9c6b2d7-3688-4baf-86b0-928e9f318bc2","children":[],"html":"不存在变量提升","zIndex":72},{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"93f9fe70-43be-4aac-8563-03b35b93d4c8","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ef1c864a-fb21-4a88-9325-24410ba109bd","children":[],"html":"let/const声明前，变量不可使用，形成暂时性死区","zIndex":70}],"html":"暂时性死区","zIndex":71}],"html":"let和const声明变量","zIndex":73},{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"9f68d114-abc1-46ad-87e6-8c158f499cf2","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"cf8a0a05-896f-4ea4-ad06-2409eaa332eb","children":[],"html":"1. 解决变量提升带来的问题，内层变量可能覆盖外层变量","zIndex":66},{"border":{"shape":"rect","stroke":"transparent","fill":"#FAEDF6","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d917c319-d07b-436c-81f3-4a8b0e5ad530","children":[],"html":"2. 避免用来计数的循环变量泄漏为全局变量","zIndex":65}],"html":"作用","zIndex":67}],"html":"块级作用域","zIndex":74},{"border":{"shape":"rect","stroke":"transparent","fill":"#E6F4FC","stroke-width":2},"treeEdge":{"stroke-width":2,"stroke":"#959EA6"},"defaultContentStyle":{"color":"#262626"},"id":"da8c3aff-211d-4a78-9fc6-b345e26b04c1","children":[],"html":"模板字符串","layout":{"quadrant":1},"zIndex":75},{"layout":{"quadrant":1,"type":"standard","direction":[1,0],"quadrantConstraint":[2]},"border":{"shape":"rect","stroke-width":2,"fill":"#EFE8FA","stroke":"transparent"},"treeEdge":{"stroke-width":2,"stroke":"#A287E1"},"id":"693b83d7-5fe7-406f-ab22-d0d91fb487fa","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#EFE8FA","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"c42dec11-630f-434a-bcbc-31881c92da4d","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#EFE8FA","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"adf4980b-6f7c-4461-8773-d3264d08ae41","children":[],"html":"没有自己的this对象","zIndex":79},{"border":{"shape":"rect","stroke":"transparent","fill":"#EFE8FA","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"62354cfe-0221-480f-830d-1842cc72fce7","children":[],"html":"不可以当做构造函数，不可以new","zIndex":81},{"border":{"shape":"rect","stroke":"transparent","fill":"#EFE8FA","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"75b7b03d-a6f3-430a-bb00-67a669b3c9b0","children":[],"html":"不可以使用arguments对象，如果要用，可以用rest参数代替","zIndex":80},{"border":{"shape":"rect","stroke":"transparent","fill":"#EFE8FA","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e2400496-5df1-4702-b022-e8313339ac67","children":[],"html":"不可以使用yield命令，箭头函数不可以用作Generator函数","zIndex":78}],"html":"和普通函数的区别","zIndex":82},{"border":{"shape":"rect","stroke":"transparent","fill":"#EFE8FA","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"63fde246-1d1d-47cd-8515-b525b5715226","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#EFE8FA","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"002d57f0-012f-4cd4-bae0-fd2d65de7cfa","children":[],"html":"普通函数内部的this指向函数运行时所在的对象，指向是可变的；箭头函数内部的this就是定义时上层作用域中的this，指向是固定的","zIndex":76}],"html":"this指向","zIndex":77}],"html":"箭头函数","zIndex":83},{"layout":{"quadrant":1,"type":"standard","direction":[1,0],"quadrantConstraint":[2]},"border":{"shape":"rect","stroke-width":2,"fill":"#FCF6E1","stroke":"transparent"},"treeEdge":{"stroke-width":2,"stroke":"#DFB85D"},"id":"63c139ba-6acb-4416-ae77-36973a42d203","children":[],"html":"解构赋值","zIndex":84},{"layout":{"quadrant":1,"type":"standard","direction":[1,0],"quadrantConstraint":[1]},"border":{"shape":"rect","stroke-width":2,"fill":"#E9F7E9","stroke":"transparent"},"treeEdge":{"stroke-width":2,"stroke":"#77C386"},"id":"ff878b22-3820-4ea9-bfdc-f4afba5d6a61","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"648a420e-2a66-4059-91b6-cdf07ebe319a","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7b1eb421-1061-448d-825e-cf8f937087f7","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"57d82fa6-a5a7-40a0-b371-5ee33f90048a","children":[],"html":"class Point {<div>&nbsp; constructor(x, y) {</div><div>&nbsp; &nbsp; this.x = x;</div><div>&nbsp; &nbsp; this.y = y;</div><div>&nbsp; }</div><div>&nbsp; toString() {</div><div>&nbsp; &nbsp; return '(' + this.x + ', ' + this.y + ')';</div><div>&nbsp; }</div><div>}</div>","zIndex":99}],"html":"类可以看作构造函数的另一种写法","zIndex":100},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"66c15222-e9a8-4672-8174-ab6c754bb45b","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"49be4c53-1316-4ea8-a912-5a816895ff83","children":[],"html":"类的默认方法，new生成对象时，会自动调用该方法","zIndex":105}],"html":"constructor方法","zIndex":106},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1d81a105-38f9-40ba-9ac3-1ad64ea3010a","children":[],"html":"通过new生成实例","zIndex":108},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"24043995-9d2a-412d-b3de-d0be1f453629","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"acca4d80-8019-4b62-9538-46ff2a2356d9","children":[],"html":"可以定义在constructor里的this上，也可以定义在最顶层(ES2022)","zIndex":109}],"html":"实例属性","zIndex":110},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8c89f828-a135-404c-b0c5-c458dcf317f6","children":[],"html":"get 和 set 关键字，拦截属性的存储行为","zIndex":107},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"92904cab-9ac9-4aab-8032-2af0589064a2","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"c58b6674-3ffb-48fa-88a9-51aeedf45438","children":[],"html":"方法前加上static关键字，该方法不会被实例继承，直接通过类来调用","zIndex":103}],"html":"静态方法","zIndex":104},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"2ed288a1-a181-4fe1-ad75-d89abea4a15b","children":[],"html":"静态属性","zIndex":102},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"098fe26d-abcb-40ac-874d-d2913b71d307","children":[],"html":"私有方法和私有属性","zIndex":101},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7359177a-b019-4b62-b84a-2b38ad128d63","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"93f7099e-21ee-41b6-8b29-0c319989e3de","children":[],"html":"内部默认就是严格模式","zIndex":97},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ca23b0be-1f3a-483c-8f76-3a98491e8009","children":[],"html":"不存在变量提升","zIndex":96}],"html":"类的注意点","zIndex":98}],"html":"Class基本用法","zIndex":111},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b862e483-08b1-4601-a73d-bc5e054e6f74","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e1b94dfc-29ad-402b-a2a0-d7a40ab914f1","children":[],"html":"使用extends关键字实现继承","zIndex":92},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"5fa01af3-48cf-4926-863e-5f028e8726da","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"85de6ee0-5920-4edb-99f7-aa2b46e42bb0","children":[],"html":"可以用来从子类上获取父类","zIndex":93}],"html":"Object.getPrototypeOf","zIndex":94},{"border":{"shape":"rect","stroke":"transparent","fill":"#E9F7E9","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b226e5a3-cff3-4e59-98e9-bd093b0d8fcd","children":[],"html":"super关键字","zIndex":91}],"html":"Class继承","zIndex":95}],"html":"类和继承","zIndex":112},{"layout":{"quadrant":1,"type":"standard","direction":[1,0],"quadrantConstraint":[2]},"border":{"shape":"rect","stroke-width":2,"fill":"#E8EEFC","stroke":"transparent"},"id":"31b52157-d5ff-4433-97ad-273c25b39c43","children":[],"html":"Promise和 async/await","treeEdge":{"stroke":"#6F81DB","stroke-width":2},"zIndex":113},{"border":{"shape":"rect","stroke":"transparent","fill":"#e1effa","stroke-width":2},"treeEdge":{"stroke-width":2,"stroke":"#959EA6"},"defaultContentStyle":{"color":"#262626"},"id":"a0a4ac75-70b3-4085-9bf2-ada79ba5ce8f","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#e1effa","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"52310139-6bbb-4685-9679-2b7fc29c331b","children":[],"html":"ES6引入的一种新的原始数据类型，表示独一无二的值，由于ES5的对象属性名都是字符串，容易重复，使用Symbol就能保证每个属性名独一无二。","zIndex":117},{"border":{"shape":"rect","stroke":"transparent","fill":"#e1effa","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e63e82d5-46af-4dc9-a866-025bf86d6439","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#e1effa","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"434cd99c-fd18-4e0a-9979-2874d65171e1","children":[],"html":"let s = Symbol();<div>typeof s&nbsp;&nbsp;<span style>// \"symbol\"</span></div>","zIndex":118}],"html":"Symbol 值通过Symbol()函数生成","zIndex":119},{"border":{"shape":"rect","stroke":"transparent","fill":"#e1effa","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ab479d9e-c0ba-4a78-9836-25dfccc96171","children":[],"html":"属性名的遍历：Object.getOwnPropertySymbols","zIndex":116},{"border":{"shape":"rect","stroke":"transparent","fill":"#e1effa","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7837fe3e-8120-4476-9f08-bfe656e7bf44","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"#e1effa","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f901ce9a-05af-4e7c-a151-2318fec4116b","children":[],"html":"重新使用同一个Symbol值","zIndex":114}],"html":"Symbol.for、Symbol.keyFor","zIndex":115}],"html":"Symbol","layout":{"quadrant":1},"zIndex":120},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2,"fill":"#e4f3e7"},"treeEdge":{"stroke-width":2,"stroke":"#77C386"},"defaultContentStyle":{"color":"#262626"},"id":"6aece02b-a3d0-46f9-b2f4-3d33a587d93f","children":[],"html":"Module","layout":{"quadrant":1},"zIndex":121},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2,"stroke":"#A287E1"},"defaultContentStyle":{"color":"#262626"},"id":"b10b096f-17b4-4c0b-abac-5919097eca4f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"154fd57a-82f8-4af0-a4fc-4d058974c6a4","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ad88b851-59f6-432b-a4bc-975bbdaf29d6","children":[],"html":"类似数组，但是成员的值是唯一的，没有重复","zIndex":153},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"04d63e0d-c11f-4a24-b963-9da93025710e","children":[{"border":{"shape":"rect","stroke":"#a287e1","stroke-width":1},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a3a4518c-a142-4c55-800b-f166689926ff","children":[],"html":"const s = new Set();<div>[2, 3, 5, 4, 5, 2, 2].forEach(x =&gt; s.add(x));</div><div>for (let i of s) {</div><div>&nbsp; console.log(i);</div><div>}</div><div>// 2 3 5 4</div>","zIndex":154}],"html":"Set本身是一个构造函数，用来生成 Set 数据结构","zIndex":155},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8fd28e95-424b-4ac2-a36b-c96cd4616e4e","children":[],"html":"数组去重方法：[...new Set(array)]","zIndex":152}],"html":"Set","zIndex":156},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a589585c-a862-474f-86f9-0f2aa96c16bc","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b900c3f7-db52-4f1d-a695-fcfc650ce1f8","children":[],"html":"WeakSet中的对象是弱引用，如果对象不再被引用，垃圾回收机制会自动回收该对象占用的内存","zIndex":161}],"html":"WeakSet","zIndex":162},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d94f8c66-a86f-4940-a353-57663d2332a2","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e8e188d0-cb2f-4d05-adc7-f6fb86f90cec","children":[],"html":"Map类似对象，也是键值对的集合，但是键不再限于字符串，各种类型的值，包括对象，都可以当做键","zIndex":165},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0d8df35e-c312-43b4-b68a-2a7d741f92e2","children":[],"html":"Object是字符串-值的对应，Map结构提供了值-值的对应，是一种更完善的Hash结构实现","zIndex":166},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"acb6d49f-ed2f-48d3-b7d3-597a12c84f22","children":[{"border":{"shape":"rect","stroke":"#beabea","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8d995e16-faed-4f8d-91d0-f22dddbbf0ac","children":[],"html":"const map = new Map([<div>&nbsp; ['name', '张三'],</div><div>&nbsp; ['title', 'Author']</div><div>]);</div><div>map.size // 2</div><div>map.has('name') // true</div><div>map.get('name') // \"张三\"</div><div>map.has('title') // true</div><div>map.get('title') // \"Author\"</div>","zIndex":163}],"html":"用法","zIndex":164}],"html":"Map","zIndex":167},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0cd8c895-e378-46ef-aeb5-51e7c0ed7c4b","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6f855f65-f976-473a-ade3-8e3d9141c641","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"badbcc26-7797-4004-9895-21781df0e6c6","children":[],"html":"1. WeakMap只接受对象和Symbol值作为键名，不接受其他类型作为键名","zIndex":158},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f04edfd3-b039-4147-b19b-b236c57512f3","children":[],"html":"2. WeakMap的键名指向的对象，不计入垃圾回收机制","zIndex":157}],"html":"和Map的区别","zIndex":159}],"html":"WeakMap","zIndex":160},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"3b9e6f46-2093-4692-81a5-41f995d0064f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"81359fef-6006-4113-999d-906892a2ea76","children":[],"html":"用于直接创建对象的弱引用","zIndex":150}],"html":"WeakRef","zIndex":151}],"html":"Set 和 Map 数据结构","zIndex":168},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2,"stroke":"#6F81DB"},"defaultContentStyle":{"color":"#262626"},"id":"b807595a-d0d9-4774-bea5-7570100ba6e4","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4d1dab89-90bd-4284-85c7-d5bbeb7a3317","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a8417189-79ba-45c7-85ba-45e02987c2d9","children":[],"html":"对象拦截器，用于改写对象默认行为","zIndex":147},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"863d5994-4e94-492a-bb9c-dc54dc0ae2c9","children":[],"html":"var proxy = new Proxy(target, handler);","zIndex":146}],"html":"Proxy","zIndex":148},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8ae08c29-d710-46d1-9d4d-b1d7b32dca16","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"19e0dd85-a54e-46b6-aaa7-510ca522f727","children":[],"html":"用于拦截对象默认行为，提供了一系列规范化操作对象的方法，例如属性查找、赋值、属性删除、函数调用等","zIndex":144}],"html":"Reflect","zIndex":145}],"html":"操作对象API：Proxy 和 Reflect","zIndex":149},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2,"stroke":"#6EC4C4"},"defaultContentStyle":{"color":"#262626"},"id":"7485fee3-5c27-4c53-8481-0014e96dbb05","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"3a18063f-ad1f-4939-be60-be7564a9539a","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a12bd1b9-2bc6-4198-b5b7-93b0b5b845d5","children":[],"html":"JS处理不同数据结构的统一接口机制。一种数据结构只要部署了 Iterator 接口，我们就称这种数据结构是“可遍历的”（iterable）。<div>原生具备 Iterator 接口的数据结构包括：Array、Map、Set、String、函数的 arguments 对象、NodeList 对象</div>","zIndex":141},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"36fd7091-7fa4-4560-851f-a80567d4404e","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"08cbe538-c82b-4204-aaf0-6a111dbffc44","children":[],"html":"1. 为不同数据结构提供统一的访问机制","zIndex":138},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"631e32d9-5e02-44dc-acf2-479ff4d427a0","children":[],"html":"2. 使得数据结构的成员能够按某种次序排列","zIndex":139},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d7c87867-6269-4f47-88ae-8dfe96fb73d5","children":[],"html":"3. ES6 创造了一种新的遍历命令for...of循环，Iterator 接口主要供for...of消费","height":60.405158340777234,"width":505.16580133014895,"zIndex":137}],"html":"作用","zIndex":140}],"html":"Iterator 遍历器","zIndex":142},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f908d6a2-54fa-4d24-88a1-fe100bd4fc24","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"bcf0ee79-d915-4aa7-9f67-6a7aaacc9d2f","children":[],"html":"用来遍历部署了 Iterator 接口的数据类型，如Array、Map、Set","zIndex":133},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"600036ba-5114-4769-9c08-a432be20a81a","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"c9b01f23-372b-47a0-b776-6d2598775b0b","children":[],"html":"使用Object.keys方法将对象的键名生成一个数组，然后遍历这个数组。<div>for (var key of Object.keys(someObject)) {</div><div>&nbsp; console.log(key + ': ' + someObject[key]);</div><div>}</div>","zIndex":134}],"html":"普通对象不能用for...of遍历","zIndex":135},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a6a8a826-fced-4c48-8e14-9b7700ee1dc3","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"c8a64df7-c2fc-4239-a015-3e3279bf0fa5","children":[],"html":"for循环：编写麻烦","zIndex":126},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ec62ce08-fecf-4649-90b7-09ba0f4f58e5","children":[],"html":"forEach：无法通过break和return跳出循环","zIndex":127},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"cd3550bb-e36a-4668-9a3a-4c15b5a845d1","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"13c54101-3d3f-408b-923b-ceb374f6e892","children":[],"html":"不适合遍历数组。数组的键名是数字，但是for...in循环是以字符串作为键名“0”、“1”、“2”等等。","zIndex":130},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0063b64e-6bf2-486c-8baf-cf4526907254","children":[],"html":"for...in循环不仅遍历数字键名，还会遍历手动添加的其他键，甚至包括原型链上的键","zIndex":129},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"95f3cba7-c2b0-4119-9860-4d59962e917a","children":[],"html":"某些情况下，for...in循环会以任意顺序遍历键名","zIndex":128}],"html":"for in","zIndex":131},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"34d9c990-e124-41cd-9fb2-915469acc1b4","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"82b29bfc-8dd7-4e35-87ee-0a0e99dcb20e","children":[],"html":"和for in一样语法简洁，但是没有for in的缺点","zIndex":123},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"96fd0a26-f8a0-4da0-a6bc-77cfe94a8cd1","children":[],"html":"可以和break、continue、return配合使用","zIndex":124},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0ee97504-178b-4409-b993-783a5a5a8100","children":[],"html":"提供了遍历所有数据结构的统一操作接口","zIndex":122}],"html":"for of","zIndex":125}],"html":"与其他遍历语法的比较","zIndex":132}],"html":"for...of","zIndex":136}],"html":"Iterator 和 for...of 循环","zIndex":143},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2,"stroke":"#DFB85D"},"defaultContentStyle":{"color":"#262626"},"id":"54279e61-6b01-4357-89c7-4ae4c4f4346f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7072ae80-16be-48a0-b0fa-8121c7cae300","children":[],"html":"ES6提供的异步变成解决方案，语法上，Generator是一个状态机，封装了多个内部状态。执行Generator会返回一个遍历器对象，它还是一个遍历器对象生成函数","zIndex":89},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"005fd003-6701-4b29-a3ed-6d0d0b8df68f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"dfbcd5c8-a159-44d2-8e26-854f32c112c7","children":[],"html":"generator函数","zIndex":86},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ec3c038a-d251-48ac-8b37-4695b61f6fd2","children":[],"html":"thunk函数","zIndex":87},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"cc6bcc0f-4a7c-434f-ba07-3904bb203aa7","children":[],"html":"co模块","zIndex":85}],"html":"Generator函数的异步应用","zIndex":88}],"html":"Generator","zIndex":90},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2,"stroke":"#E482D4"},"defaultContentStyle":{"color":"#262626"},"id":"08a0e459-49c4-47ed-ae59-cb97b0f8c804","children":[{"layout":{"quadrant":1,"type":"standard","direction":[1,0],"quadrantConstraint":[1]},"border":{"shape":"rect","stroke-width":2,"fill":"rgba(0, 0, 0, 0)","stroke":"transparent"},"id":"d7402859-8548-47a4-b648-b6475440033e","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"rgba(0, 0, 0, 0)","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"6168f6e8-42e5-480d-87ea-d28f088ecb67","children":[{"border":{"shape":"rect","stroke":"transparent","fill":"rgba(0, 0, 0, 0)","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"751a1dec-a5fe-4748-a125-b59537a12393","children":[],"html":"includes、startsWith、endsWith、repeat、padStart、padEnd、trimStart、trimEnd、matchAll、replaceAll、at","zIndex":16}],"html":"新增方法","zIndex":17}],"html":"字符串相关","treeEdge":{"stroke":"#69B1E4","stroke-width":2},"zIndex":18},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"985772e8-2799-4c8a-834e-9b24c1c09869","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"12fcd497-f429-466c-9b6f-7829e7ef09e6","children":[],"html":"函数参数默认值","zIndex":21},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f9de64d8-a0fd-44cf-acf6-33b9a3b19344","children":[],"html":"rest参数","zIndex":23},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"87d9c112-9c3a-45d9-9edc-d790717ed1c4","children":[],"html":"严格模式","zIndex":24},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"2d64dc77-5d51-44ea-96fd-60b7a521b41a","children":[],"html":"name属性","zIndex":22},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b60201c3-9504-4ca7-b5e3-61be0d3958d8","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fc83dd60-27c3-4828-b9a9-63a8159491ef","children":[],"html":"尾调用（Tail Call）是函数式编程的一个重要概念，就是指某个函数的最后一步是调用另一个函数。","zIndex":19}],"html":"尾调用优化","zIndex":20}],"html":"函数相关","zIndex":25},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e0d12dfa-fc11-474b-b2d7-01f55d0982bf","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"06fdf36c-a24d-4ba9-af07-154374d6f807","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4fc782e4-dc1e-4df3-902b-ae35fbf51856","children":[],"html":"将一个数组转为用逗号分隔的参数序列","zIndex":56},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"254ed9fe-3620-451b-b046-3344ffa8b2d3","children":[],"html":"可以替代函数的apply方法：Math.max(...[14, 3, 77])","zIndex":57},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fee26078-8e29-4a1d-b48a-773e8dba42f1","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8f641fef-c704-489e-99e6-2c4cbb8a181b","children":[],"html":"复制数组、合并数组...","zIndex":54}],"html":"应用","zIndex":55}],"html":"扩展运算符","zIndex":58},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"363a7ac9-abee-45e1-ba5d-5d95da407d29","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"b6e05f48-8bcc-46d1-9f87-4a9ce24325cb","children":[],"html":"将 类数组对象 和 可遍历 的对象转为真正的数组","zIndex":59}],"html":"Array.from","zIndex":60},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8c2204b5-312c-4929-b723-895bcd65740c","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"5fa1a625-dd27-4c13-9f9c-4060de0af2f6","children":[],"html":"将一组值，转为数组：Array.of(3, 11, 8) // [3,11,8]","zIndex":61}],"html":"Array.of","zIndex":62},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4f53417d-9e3b-4957-add1-728ec5ab54aa","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"2353c203-0bb2-4d47-8ff6-9ce76e02843c","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"0e661968-adfc-40de-82a7-8dfa5b9ad4db","children":[],"html":"在当前数组内部，将指定位置的成员复制到其他位置（会覆盖原有成员），然后返回当前数组","zIndex":42},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"25380727-99e9-4522-a048-d91ad9c956a3","children":[],"html":"会修改原数组","zIndex":41}],"html":"copyWithin","zIndex":43},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fd6dd577-ade4-4059-8108-b360f25d6a11","children":[],"html":"find、findIndex、findLast、findLastIndex","zIndex":46},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"72199169-bed5-43ee-8447-56a9310bd2cd","children":[],"html":"fill","zIndex":48},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"57c1d134-60f8-481e-befb-43bda93e8d25","children":[],"html":"entries、keys、values","zIndex":50},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8d482f32-4b98-421f-a222-66435bb33d48","children":[],"html":"includes","zIndex":52},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7b4bb2dc-cbd8-4304-ad2d-ffc22d11316c","children":[],"html":"flat、flatMap","zIndex":51},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"8e2bf3e6-d8bd-4729-b991-69932a2ba074","children":[],"html":"at","zIndex":49},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d33423bd-dca4-4607-ac82-acc565403308","children":[],"html":"toReversed、toSorted、toSpliced、with","zIndex":47},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"aebd9582-e87e-486c-b894-cf540cd96281","children":[],"html":"group、groupToMap","zIndex":45},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"cf7002f2-f32b-4bd5-918f-1f942711aa0b","children":[],"html":"数组的空位","zIndex":44},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a890bd91-df17-4cb0-9841-b861e4464d57","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"dbc3d46c-b505-4ff6-872b-cf20969a19d8","children":[],"html":"排序稳定性（stable sorting）是排序算法的重要属性，指的是排序关键字相同的项目，排序前后的顺序不变。","zIndex":39}],"html":"Array.prototype.sort的排序稳定性","zIndex":40}],"html":"实例方法","zIndex":53}],"html":"数组相关","zIndex":63},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fa2a007e-fc24-42b2-b7c7-a284dd453f31","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"f32ccde2-61fc-4146-a5a8-ec1534e5f854","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"d520d50e-c38a-4fd7-969a-92229dce7837","children":[],"html":"属性的简洁表示法","zIndex":36},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4b4f07fd-e48e-4f05-b0bd-1087c128c881","children":[],"html":"super关键字","zIndex":35}],"html":"对象的拓展","zIndex":37},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"bf842fdd-f8b4-4256-988e-cb71b54962ca","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"4a0bd005-da82-40e7-a638-95f6d30ba620","children":[],"html":"Object.is","zIndex":27},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"dbf75fd6-ea4f-45ad-807b-217b268f5001","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1a4db9e3-9581-4e30-abf2-a1f9956678ec","children":[],"html":"用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。","zIndex":29}],"html":"Object.assign","zIndex":30},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"2783de05-0380-4703-8d4b-85eaa992a479","children":[],"html":"Object.getOwnPropertyDescriptors","zIndex":33},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"42050b64-6fc4-48d6-b1b2-84eeaeb7f470","children":[],"html":"__proto__属性、Object.setPrototypeOf、Object.getPrototypeof","zIndex":32},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7de3b5c3-df03-4630-98ff-81a748052a57","children":[],"html":"Object.keys、Object.values、Object.entries","zIndex":31},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"149b27e6-374d-4c3c-99aa-f3729607aa18","children":[],"html":"Object.fromEntries","zIndex":28},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"c50e3085-9c5b-40c3-a2ce-dd6feb6deddc","children":[],"html":"Object.hasOwn","zIndex":26}],"html":"对象新增方法","zIndex":34}],"html":"对象相关","zIndex":38},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"71ba63f4-a699-426d-8ae8-9f61804c63da","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"fe774f3b-fdb9-4708-a3ff-28d4a803400f","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"a6f7fa01-560e-4a2f-adc6-c863c717fd0b","children":[],"html":"2 ** 3 // 8","zIndex":1}],"html":"指数运算符","zIndex":2},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"2828d23e-9dbf-4f8d-9bf4-e44ea47799c3","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"655d6c3f-b04c-464d-bffd-a3839af02d95","children":[],"html":"?.","zIndex":3}],"html":"链判断运算符","zIndex":4},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e838bede-e28b-4f81-b8fc-bc0f59e313a1","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"ac978358-1a28-4b7c-9ad8-b68f20bc6352","children":[],"html":"??：它的行为类似||，但是只有运算符左侧的值为null或undefined时，才会返回右侧的值","zIndex":13}],"html":"Null 判断运算符","zIndex":14},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"1712e684-0bec-43dd-be7f-92c0718f7ceb","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"947d1c73-ff82-4518-a4cb-afaa0cd2b988","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"dc90af3d-321c-44c9-afaa-fb74bd096021","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"e6e30e02-bdb1-4340-b853-e3bffa40aaf9","children":[],"html":"user.id = user.id || 1;<div>// 新的写法</div><div>user.id ||= 1;</div>","zIndex":7}],"html":"x ||= y，等同于 x || (x = y)","zIndex":8}],"html":"或赋值运算符","zIndex":9},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7707138c-f592-45d6-b3ca-08e46ee6ab41","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"7357ba43-edbe-4454-958b-e759464921ab","children":[],"html":"x &amp;&amp;= y，等同于 x &amp;&amp; (x = y)","zIndex":10}],"html":"与赋值运算符","zIndex":11},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"c844f176-bab7-437c-a91e-20f8d86b2c40","children":[{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"2581393a-0f80-4fef-9c83-2987c62a28e4","children":[],"html":"x ??= y，等同于 x ?? (x = y)","zIndex":5}],"html":"Null赋值运算符","zIndex":6}],"html":"逻辑赋值运算符","zIndex":12},{"border":{"shape":"rect","stroke":"transparent","stroke-width":2},"treeEdge":{"stroke-width":2},"defaultContentStyle":{"color":"#262626"},"id":"aceca28f-4b3e-4c18-a004-58a527389368","children":[],"zIndex":0,"html":"#！命令"}],"html":"运算符的拓展","zIndex":15}],"html":"其他","layout":{"quadrant":1},"zIndex":64}],"layout":{"type":"standard","direction":[1,0]},"zIndex":169}]},"mode":"edit","viewportSetting":{"zoom":1,"tlCanvasPoint":[8,2819.5,1],"width":1601,"height":949},"viewportOption":"adapt","text":"ES6+块级作用域概念指由花括号{}包含所形成的代码块，这个代码块内部定义的变量在代码块外部不可见。let关键字为JS新增了块级作用域的支持。let和const声明变量不存在变量提升暂时性死区let/const声明前，变量不可使用，形成暂时性死区作用1. 解决变量提升带来的问题，内层变量可能覆盖外层变量2. 避免用来计数的循环变量泄漏为全局变量模板字符串箭头函数和普通函数的区别没有自己的this对象不可以当做构造函数，不可以new不可以使用arguments对象，如果要用，可以用rest参数代替不可以使用yield命令，箭头函数不可以用作Generator函数this指向普通函数内部的this指向函数运行时所在的对象，指向是可变的；箭头函数内部的this就是定义时上层作用域中的this，指向是固定的解构赋值类和继承Class基本用法类可以看作构造函数的另一种写法class Point {  constructor(x, y) {    this.x = x;    this.y = y;  }  toString() {    return '(' + this.x + ', ' + this.y + ')';  }}constructor方法类的默认方法，new生成对象时，会自动调用该方法通过new生成实例实例属性可以定义在constructor里的this上，也可以定义在最顶层(ES2022)get 和 set 关键字，拦截属性的存储行为静态方法方法前加上static关键字，该方法不会被实例继承，直接通过类来调用静态属性私有方法和私有属性类的注意点内部默认就是严格模式不存在变量提升Class继承使用extends关键字实现继承Object.getPrototypeOf可以用来从子类上获取父类super关键字Promise和 async/awaitSymbolES6引入的一种新的原始数据类型，表示独一无二的值，由于ES5的对象属性名都是字符串，容易重复，使用Symbol就能保证每个属性名独一无二。Symbol 值通过Symbol()函数生成let s = Symbol();typeof s  // \"symbol\"属性名的遍历：Object.getOwnPropertySymbolsSymbol.for、Symbol.keyFor重新使用同一个Symbol值ModuleSet 和 Map 数据结构Set类似数组，但是成员的值是唯一的，没有重复Set本身是一个构造函数，用来生成 Set 数据结构const s = new Set();[2, 3, 5, 4, 5, 2, 2].forEach(x => s.add(x));for (let i of s) {  console.log(i);}// 2 3 5 4数组去重方法：[...new Set(array)]WeakSetWeakSet中的对象是弱引用，如果对象不再被引用，垃圾回收机制会自动回收该对象占用的内存MapMap类似对象，也是键值对的集合，但是键不再限于字符串，各种类型的值，包括对象，都可以当做键Object是字符串-值的对应，Map结构提供了值-值的对应，是一种更完善的Hash结构实现用法const map = new Map([  ['name', '张三'],  ['title', 'Author']]);map.size // 2map.has('name') // truemap.get('name') // \"张三\"map.has('title') // truemap.get('title') // \"Author\"WeakMap和Map的区别1. WeakMap只接受对象和Symbol值作为键名，不接受其他类型作为键名2. WeakMap的键名指向的对象，不计入垃圾回收机制WeakRef用于直接创建对象的弱引用操作对象API：Proxy 和 ReflectProxy对象拦截器，用于改写对象默认行为var proxy = new Proxy(target, handler);Reflect用于拦截对象默认行为，提供了一系列规范化操作对象的方法，例如属性查找、赋值、属性删除、函数调用等Iterator 和 for...of 循环Iterator 遍历器JS处理不同数据结构的统一接口机制。一种数据结构只要部署了 Iterator 接口，我们就称这种数据结构是“可遍历的”（iterable）。原生具备 Iterator 接口的数据结构包括：Array、Map、Set、String、函数的 arguments 对象、NodeList 对象作用1. 为不同数据结构提供统一的访问机制2. 使得数据结构的成员能够按某种次序排列3. ES6 创造了一种新的遍历命令for...of循环，Iterator 接口主要供for...of消费for...of用来遍历部署了 Iterator 接口的数据类型，如Array、Map、Set普通对象不能用for...of遍历使用Object.keys方法将对象的键名生成一个数组，然后遍历这个数组。for (var key of Object.keys(someObject)) {  console.log(key + ': ' + someObject[key]);}与其他遍历语法的比较for循环：编写麻烦forEach：无法通过break和return跳出循环for in不适合遍历数组。数组的键名是数字，但是for...in循环是以字符串作为键名“0”、“1”、“2”等等。for...in循环不仅遍历数字键名，还会遍历手动添加的其他键，甚至包括原型链上的键某些情况下，for...in循环会以任意顺序遍历键名for of和for in一样语法简洁，但是没有for in的缺点可以和break、continue、return配合使用提供了遍历所有数据结构的统一操作接口GeneratorES6提供的异步变成解决方案，语法上，Generator是一个状态机，封装了多个内部状态。执行Generator会返回一个遍历器对象，它还是一个遍历器对象生成函数Generator函数的异步应用generator函数thunk函数co模块其他字符串相关新增方法includes、startsWith、endsWith、repeat、padStart、padEnd、trimStart、trimEnd、matchAll、replaceAll、at函数相关函数参数默认值rest参数严格模式name属性尾调用优化尾调用（Tail Call）是函数式编程的一个重要概念，就是指某个函数的最后一步是调用另一个函数。数组相关扩展运算符将一个数组转为用逗号分隔的参数序列可以替代函数的apply方法：Math.max(...[14, 3, 77])应用复制数组、合并数组...Array.from将 类数组对象 和 可遍历 的对象转为真正的数组Array.of将一组值，转为数组：Array.of(3, 11, 8) // [3,11,8]实例方法copyWithin在当前数组内部，将指定位置的成员复制到其他位置（会覆盖原有成员），然后返回当前数组会修改原数组find、findIndex、findLast、findLastIndexfillentries、keys、valuesincludesflat、flatMapattoReversed、toSorted、toSpliced、withgroup、groupToMap数组的空位Array.prototype.sort的排序稳定性排序稳定性（stable sorting）是排序算法的重要属性，指的是排序关键字相同的项目，排序前后的顺序不变。对象相关对象的拓展属性的简洁表示法super关键字对象新增方法Object.isObject.assign用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。Object.getOwnPropertyDescriptors__proto__属性、Object.setPrototypeOf、Object.getPrototypeofObject.keys、Object.values、Object.entriesObject.fromEntriesObject.hasOwn运算符的拓展指数运算符2 ** 3 // 8链判断运算符?.Null 判断运算符??：它的行为类似||，但是只有运算符左侧的值为null或undefined时，才会返回右侧的值逻辑赋值运算符或赋值运算符x ||= y，等同于 x || (x = y)user.id = user.id || 1;// 新的写法user.id ||= 1;与赋值运算符x &&= y，等同于 x && (x = y)Null赋值运算符x ??= y，等同于 x ?? (x = y)#！命令","graphicsBBox":{"x":553,"y":311,"width":1270,"height":6645}}